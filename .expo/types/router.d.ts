/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/auctions` | `/auctions`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/my-nfts` | `/my-nfts`; params?: Router.UnknownInputParams; } | { pathname: `/components/CustomTabBar`; params?: Router.UnknownInputParams; } | { pathname: `/components/LoadingScreen`; params?: Router.UnknownInputParams; } | { pathname: `/components/LoadingWave`; params?: Router.UnknownInputParams; } | { pathname: `/components/NFTCard`; params?: Router.UnknownInputParams; } | { pathname: `/config/env`; params?: Router.UnknownInputParams; } | { pathname: `/context/ThemeContext`; params?: Router.UnknownInputParams; } | { pathname: `/utils/ipfs`; params?: Router.UnknownInputParams; } | { pathname: `/utils/wallet`; params?: Router.UnknownInputParams; } | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `/nft/[tokenId]`, params: Router.UnknownInputParams & { tokenId: string | number; } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/auctions` | `/auctions`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/my-nfts` | `/my-nfts`; params?: Router.UnknownOutputParams; } | { pathname: `/components/CustomTabBar`; params?: Router.UnknownOutputParams; } | { pathname: `/components/LoadingScreen`; params?: Router.UnknownOutputParams; } | { pathname: `/components/LoadingWave`; params?: Router.UnknownOutputParams; } | { pathname: `/components/NFTCard`; params?: Router.UnknownOutputParams; } | { pathname: `/config/env`; params?: Router.UnknownOutputParams; } | { pathname: `/context/ThemeContext`; params?: Router.UnknownOutputParams; } | { pathname: `/utils/ipfs`; params?: Router.UnknownOutputParams; } | { pathname: `/utils/wallet`; params?: Router.UnknownOutputParams; } | { pathname: `/+not-found`, params: Router.UnknownOutputParams & {  } } | { pathname: `/nft/[tokenId]`, params: Router.UnknownOutputParams & { tokenId: string; } };
      href: Router.RelativePathString | Router.ExternalPathString | `/${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/auctions${`?${string}` | `#${string}` | ''}` | `/auctions${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/my-nfts${`?${string}` | `#${string}` | ''}` | `/my-nfts${`?${string}` | `#${string}` | ''}` | `/components/CustomTabBar${`?${string}` | `#${string}` | ''}` | `/components/LoadingScreen${`?${string}` | `#${string}` | ''}` | `/components/LoadingWave${`?${string}` | `#${string}` | ''}` | `/components/NFTCard${`?${string}` | `#${string}` | ''}` | `/config/env${`?${string}` | `#${string}` | ''}` | `/context/ThemeContext${`?${string}` | `#${string}` | ''}` | `/utils/ipfs${`?${string}` | `#${string}` | ''}` | `/utils/wallet${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/auctions` | `/auctions`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/my-nfts` | `/my-nfts`; params?: Router.UnknownInputParams; } | { pathname: `/components/CustomTabBar`; params?: Router.UnknownInputParams; } | { pathname: `/components/LoadingScreen`; params?: Router.UnknownInputParams; } | { pathname: `/components/LoadingWave`; params?: Router.UnknownInputParams; } | { pathname: `/components/NFTCard`; params?: Router.UnknownInputParams; } | { pathname: `/config/env`; params?: Router.UnknownInputParams; } | { pathname: `/context/ThemeContext`; params?: Router.UnknownInputParams; } | { pathname: `/utils/ipfs`; params?: Router.UnknownInputParams; } | { pathname: `/utils/wallet`; params?: Router.UnknownInputParams; } | `/+not-found` | `/nft/${Router.SingleRoutePart<T>}` | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `/nft/[tokenId]`, params: Router.UnknownInputParams & { tokenId: string | number; } };
    }
  }
}
